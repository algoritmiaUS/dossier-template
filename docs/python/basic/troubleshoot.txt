Antes de enviar (Pre-submit)
- Escribe algunos casos de prueba simples si las muestras no son suficientes.
- ¿Los límites de tiempo están ajustados? Si es así, genera casos máximos.
- ¿El uso de memoria está bien?
- Asegúrate de enviar el archivo correcto.

Respuesta incorrecta (Wrong answer)
- ¡Usa print() para depurar tu solución! Imprime también la salida de depuración.
- ¿Estás limpiando todas las estructuras de datos entre casos de prueba? Asegúrate de reiniciar variables y estructuras como listas, diccionarios o conjuntos.
- ¿Tu algoritmo puede manejar todo el rango de entrada?
- Lee de nuevo el enunciado completo del problema.
- ¿Estás manejando correctamente todos los casos límite?
- ¿Has entendido bien el problema?
- ¿Alguna variable sin inicializar?
- ¿Confusión entre n y m, i y j, etc.?
- ¿Seguro de que tu algoritmo funciona?
- ¿Qué casos especiales no has considerado?
- ¿Seguro de que las funciones integradas o de las librerías que usas funcionan como piensas?
- Añade algunas aserciones (assert).
- Crea algunos casos de prueba para ejecutar tu algoritmo.
- Recorre el algoritmo con un caso sencillo.
- Vuelve a revisar esta lista.
- Explica tu algoritmo a un compañero.
- Pídele a tu compañero que revise tu código.
- Da un pequeño paseo, por ejemplo al baño.
- ¿El formato de salida es correcto? (incluyendo espacios en blanco)
- Reescribe tu solución desde cero o deja que un compañero lo haga.

Error en tiempo de ejecución (Runtime error)
- ¿Has probado todos los casos límite de forma local?
- ¿Alguna variable sin inicializar?
- ¿Estás accediendo a un índice fuera de rango en una lista, tupla o cadena?
- ¿Alguna aserción que pueda fallar?
- ¿Alguna posible división por cero?
- ¿Alguna recursión infinita posible?
- ¿Estás usando demasiada memoria? (Esto puede causar un MemoryError).

Límite de tiempo excedido (Time limit exceeded)
- ¿Tienes algún bucle infinito posible?
- ¿Cuál es la complejidad de tu algoritmo? Analiza si es O(N^2), O(N log N), etc.
- ¿Estás copiando muchos datos innecesarios?
- ¿Qué tan grande es la entrada y la salida? Considera usar sys.stdin.readline() para entradas grandes.
- ¿Estás usando estructuras de datos ineficientes para la operación que estás realizando? La búsqueda en una lista es O(N), mientras que en un conjunto o diccionario es O(1) en promedio.
- ¿Qué opinan tus compañeros sobre tu algoritmo?

Límite de memoria excedido (Memory limit exceeded)
- ¿Cuál es la cantidad máxima de memoria que debería necesitar tu algoritmo?
- ¿Estás limpiando todas las estructuras de datos entre casos de prueba?
- Evita crear listas o diccionarios innecesariamente grandes. Usa generadores o yield si es posible.